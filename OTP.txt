import com.google.firebase.FirebaseException;
import com.google.firebase.auth.AuthResult;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseUser;
import com.google.firebase.auth.PhoneAuthCredential;
import com.google.firebase.auth.PhoneAuthProvider;

public class MainActivity extends AppCompatActivity {

    private Button OTP;
    private Button Submit;
    private EditText Phone;
    private EditText Otp;
    private String phone;
    private String verification_code;
    private TextView timer;

    private int STORAGE_PERMISSION_CODE = 1;

    FirebaseAuth auth;
    PhoneAuthProvider.OnVerificationStateChangedCallbacks mCallback;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        auth = FirebaseAuth.getInstance();
        FirebaseUser currentFirebaseUser = auth.getCurrentUser();
        if (currentFirebaseUser != null) {
            phone = currentFirebaseUser.getPhoneNumber();

            /*Toast.makeText(this, "" + currentFirebaseUser.getUid() + currentFirebaseUser.getPhoneNumber(), Toast.LENGTH_LONG).show();*/
            Intent intent = new Intent(MainActivity.this, SecondPage.class);
            startActivity(intent);

        }else {
            setContentView(R.layout.activity_main);

            setTitle("Login");

            OTP = findViewById(R.id.button1);
            Otp = findViewById(R.id.editText2);

            timer = findViewById(R.id.textView7);

            Otp.addTextChangedListener(totalTextWatcher);

            Phone = findViewById(R.id.editText);

            SmsReceiver.bindListener(new SmsListner() {
                @Override
                public void messageReceived(String messageText) {
                    Otp.setText(messageText);
                }
            });



            auth = FirebaseAuth.getInstance();
            mCallback = new PhoneAuthProvider.OnVerificationStateChangedCallbacks() {
                @Override
                public void onVerificationCompleted(PhoneAuthCredential phoneAuthCredential) {

                }

                @Override
                public void onVerificationFailed(FirebaseException e) {
                    Toast.makeText(MainActivity.this, "Error" + e, Toast.LENGTH_SHORT).show();
                }

                @Override
                public void onCodeSent(String s, PhoneAuthProvider.ForceResendingToken forceResendingToken) {
                    super.onCodeSent(s, forceResendingToken);
                    verification_code = s;
                    Toast.makeText(getApplicationContext(), "Code sent successfully" , Toast.LENGTH_SHORT).show();
                    new CountDownTimer(30000, 1000) {

                        public void onTick(long millisUntilFinished) {
                            OTP.setEnabled(false);
                            timer.setText("Next OTP in " + millisUntilFinished / 1000);

                          
                        }

                        public void onFinish() {
                            OTP.setEnabled(true);
                            timer.setText("Click to send OTP again!");

                        }

                    }.start();
                }
            };

            OTP.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    if (Phone.getText().toString().trim().isEmpty()) {
                        timer.setText("Please Enter a valid phone number and try again!");
                    }
                    else {
                        send_sms();
                        if (ContextCompat.checkSelfPermission(MainActivity.this, Manifest.permission.RECEIVE_SMS) == PackageManager.PERMISSION_GRANTED) {
                            /*Toast.makeText(MainActivity.this, "Permission already granted",Toast.LENGTH_SHORT).show();*/
                        } else {
                            requestStoragePermission();
                        }

                    }
                }
            });

        }

    }

    public void send_sms(){

        String number1 = Phone.getText().toString();
        String number = "+91" + number1;
        PhoneAuthProvider.getInstance().verifyPhoneNumber(
                number,60, TimeUnit.SECONDS,this,mCallback
        );

    }

    public void signInWithPhone(PhoneAuthCredential credential){
        auth.signInWithCredential(credential).addOnCompleteListener(new OnCompleteListener<AuthResult>() {
            @Override
            public void onComplete(@NonNull Task<AuthResult> task) {

                if (task.isSuccessful()){
                    Toast.makeText(MainActivity.this,"User Signed in Successfully",Toast.LENGTH_SHORT).show();
                    Bundle basket = new Bundle();
                    basket.putString("raj", phone);
                    Intent intent = new Intent(MainActivity.this, SecondPage.class);
                    intent.putExtras(basket);
                    finish();
                    startActivity(intent);
                }
                else {
                    Toast.makeText(MainActivity.this,"Error",Toast.LENGTH_SHORT).show();
                }
            }
        }).addOnFailureListener(new OnFailureListener() {
            @Override
            public void onFailure(@NonNull Exception e) {
                Toast.makeText(MainActivity.this,"Error" + e,Toast.LENGTH_SHORT).show();
            }
        });
    }



    public void verifyPhoneNumber(){
        String input_code = Otp.getText().toString();
        PhoneAuthCredential credential = PhoneAuthProvider.getCredential(verification_code,input_code);
        signInWithPhone(credential);
    }

    private void signInWithPhoneAuthCredentials(PhoneAuthCredential credential){
        auth.signInWithCredential(credential).addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {
            @Override
            public void onComplete(@NonNull Task<AuthResult> task) {
                if (task.isSuccessful()){
                    Toast.makeText(MainActivity.this,"User Signed in Successfully",Toast.LENGTH_SHORT).show();
                }
            }
        }).addOnFailureListener(new OnFailureListener() {
            @Override
            public void onFailure(@NonNull Exception e) {
                Toast.makeText(MainActivity.this,"Error" + e,Toast.LENGTH_SHORT).show();
            }
        });
    }

    private TextWatcher totalTextWatcher = new TextWatcher() {
        @Override
        public void beforeTextChanged(CharSequence s, int start, int count, int after) {

        }

        @Override
        public void onTextChanged(CharSequence s, int start, int before, int count) {

            if (Otp.length()==6){
                verifyPhoneNumber();
            }

        }

        @Override
        public void afterTextChanged(Editable s) {


        }
    };

}
